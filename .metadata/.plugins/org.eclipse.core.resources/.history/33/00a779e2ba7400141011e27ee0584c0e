

#ifndef PLAYER_H_
#define PLAYER_H_
#include "flying_objects.h"
class player :public flying_objects
{

public:

	// Datamedlemmar
	int life_;
	int dmg_;
	std::vector<int> position_;
	std::vector<power_up_attack> *power_up_attack_{nullptr};


	// Konstruktor
	player(int life,int dmg, std::vector<int> position): life_{life}, dmg_{dmg}, position_{position}{};

	//Operatorer
	void operator=(const player&);

	// Destruktor
	 ~player() = default;

	 // Funktioner
	 int get_life() const override;
	 void hit(flying_objects&)  override;
	 std::vector<int> movement() const override;
	 std::vector<power_up_attack> get_power_up()
		{
		 	 return *power_up_attack_;
		}


};
#endif /* PLAYER_H_ */
