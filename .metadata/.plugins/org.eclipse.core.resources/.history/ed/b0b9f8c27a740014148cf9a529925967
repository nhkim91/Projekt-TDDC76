/*
 * Flying_objects.h
 *
 *  Created on: 23 nov 2014
 *      Author: samanthavi
 */

#ifndef FLYING_OBJECTS_H_
#define FLYING_OBJECTS_H_
#include <vector>


////////////////////////////////////////////////////////////////
class flying_objects
{
public:
	virtual void  hit(flying_objects&)  = 0;
	virtual std::vector<int> movement() const = 0;
	virtual int get_life() const = 0;


	virtual ~flying_objects() {}

};

////////////////////////////////////////////////////////////////
class power_up :public flying_objects
{

public:

	// Datamedlemmar
	int life_;
	std::vector<int> position_;

	// Konstruktor
	power_up(int life, std::vector<int> position): life_{life}, position_{position}{};

	// Destruktor
	 ~power_up() = default;

	// Funktioner
	 int get_life() const override;
	 std::vector<int> movement() const override;

};
////////////////////////////////////////////////////////////////
class power_up_attack : public power_up
{
public:

	// Konstruktor
	power_up_attack(int life, std::vector<int> position): power_up::power_up{life,position}{};

};
////////////////////////////////////////////////////////////////
class power_up_life : public power_up
{
public:

	// Konstruktor
	power_up_life(int life, std::vector<int> position): power_up::power_up{life,position}{};

};
////////////////////////////////////////////////////////////////
class power_up_shield : public power_up
{
public:

	// Konstruktor
	power_up_shield(int life, std::vector<int> position): power_up::power_up{life,position}{};

};
////////////////////////////////////////////////////////////////
class power_up_slow_motion : public power_up
{
public:

	// Konstruktor
	power_up_slow_motion(int life, std::vector<int> position): power_up::power_up{life,position}{};

};
////////////////////////////////////////////////////////////////
class player :public flying_objects
{

public:

	// Datamedlemmar
	int life_;
	int dmg_;
	std::vector<int> position_;
	std::vector<power_up_attack*> power_up_attack_;


	// Konstruktor
	player(int life,int dmg, std::vector<int> position): life_{life}, dmg_{dmg}, position_{position} power_up_attack_{nullptr}{};

	//Operatorer
	void operator=(const player&);

	// Destruktor
	 ~player() = default;

	 // Funktioner
	 int get_life() const override;
	 void hit(flying_objects&)  override;
	 std::vector<int> movement() const override;

};

////////////////////////////////////////////////////////////////
class meteorite :public flying_objects
{

public:

	// Datamedlemmar
	int life_;
	std::vector<int> position_;

	// Konstruktor
	meteorite(int life, std::vector<int> position): life_{life}, position_{position}{};

	// Destruktor
	 ~meteorite() = default;

	 // Funktioner
	int get_life() const override;
	std::vector<int> movement() const override;
	void hit(flying_objects&)  override;
};
////////////////////////////////////////////////////////////////
class meteorite_small : public meteorite
{
public:

	// Konstruktor
	meteorite_small(int life, std::vector<int> position): meteorite::meteorite{life,position}{};

};
////////////////////////////////////////////////////////////////
class bullet :public flying_objects
{

public:

	// Datamedlemmar
	int life_;
	int dmg_;
	std::vector<int> position_;

	// Konstruktor
	bullet(int life,int dmg, std::vector<int> position): life_{life},dmg_{dmg}, position_{position}{};

	// Destruktor
	 ~bullet() = default;

	 // Funktioner
	 int get_life() const override;
	 std::vector<int> movement() const override;
	 int get_dmg() const;
	 void hit(flying_objects&) override;
};
class bullet_mk1 : public bullet
{
public:

	// Konstruktor
	bullet_mk1(int life, int dmg, std::vector<int> position): bullet::bullet{life,dmg,position}{};

};

////////////////////////////////////////////////////////////////

class alien :public flying_objects
{
public:

	// Datamedlemmar
	int life_;
	std::vector<int> position_;

	// Konstruktor
	alien(int life, std::vector<int> position): life_{life}, position_{position}{};

	// Destruktor
	 ~alien() = default;

	// Funktioner
	int get_life() const override;
	std::vector<int> movement() const override;

};
////////////////////////////////////////////////////////////////
class alien_mk1 : public alien
{
public:

	// Konstruktor
	alien_mk1(int life, std::vector<int> position): alien::alien{life,position}{};

};
////////////////////////////////////////////////////////////////
#endif /* FLYING_OBJECTS_H_ */
