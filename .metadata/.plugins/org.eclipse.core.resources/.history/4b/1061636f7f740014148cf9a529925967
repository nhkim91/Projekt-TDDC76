#include "flying_objects.h"

#include <iostream>
#include <vector>
using namespace std;


/////////////////////////////////////////////////
void player::operator=(const player& other)
{
	life_ = other.life_;
	dmg_ = other.dmg_;
	position_ = other.position_;
}



vector<int> player::movement() const
{
	return position_;
}

int player::get_life() const
{
	return life_;
}

void player::hit(flying_objects& other)
{
	flying_objects *ptr_;
	ptr_ = &other;

	meteorite* other_obj_1;
	other_obj_1 = dynamic_cast<meteorite*>(ptr_);
	if (other_obj_1 != nullptr)
		{
			--life_;
		}

	bullet* other_obj_2;
	other_obj_2 = dynamic_cast<bullet*>(ptr_);
	if (other_obj_2 != nullptr)
			{
				life_= life_-other_obj_2->get_dmg();
			}
	return;
}

/////////////////////////////////////////////////
void meteorite::hit(flying_objects& other)
{
	flying_objects *ptr_;
	ptr_ = &other;

	meteorite* other_obj;
	other_obj = dynamic_cast<meteorite*>(ptr_);
	if (other_obj != nullptr)
		{
			life_ = life_-1;
		}

	return;
}

vector<int> meteorite::movement() const
{

	return this->position_;
}

int meteorite::get_life() const
{
	return life_;
}


/////////////////////////////////////////////////
vector<int> bullet::movement() const
{

	return position_;
}

int bullet::get_life() const
{
	return life_;
}

int bullet::get_dmg() const
{
	return dmg_;
}

void bullet::hit(flying_objects& other)
{
	return;
}
/////////////////////////////////////////////////

vector<int> power_up::movement() const
{

	return this->position_;
}

int power_up::get_life() const
{
	return life_;
}


/////////////////////////////////////////////////

vector<int> alien::movement() const
{

	return this->position_;
}


int alien::get_life() const
{
	return life_;
}
